__NUXT_JSONP__("/archive/css-advent-calender-2017", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U){return {data:[{page:{title:"CSSとわたし、正義と悪、そしてこれから。",description:"CSS Advent Calendar 2017 16日目の記事",date:"2017-12-16T00:00:00.000Z",author:"yamanoku",toc:[{id:R,depth:k,text:S},{id:O,depth:k,text:P},{id:s,depth:k,text:s},{id:u,depth:k,text:u},{id:F,depth:k,text:G},{id:I,depth:k,text:J},{id:L,depth:k,text:M},{id:r,depth:z,text:r},{id:t,depth:z,text:t},{id:v,depth:z,text:v},{id:D,depth:k,text:E}],body:{type:"root",children:[{type:a,tag:c,props:{},children:[{type:b,value:"この記事は "},{type:a,tag:d,props:{href:"https:\u002F\u002Fqiita.com\u002Fadvent-calendar\u002F2017\u002Fcss",rel:[o,p,q],target:n},children:[{type:b,value:"CSS Advent Calendar 2017"}]},{type:b,value:" 16日目の記事です。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"テック的なことを書こうかと思いましたが、これまでの人生を振り返ってきて自分にとってのCSSとは何か、そしてこれからどうやっていくべきかみたいなことを書こうと思います。Qiitaに書くのもあれな内容と判断したのでブログの方にしました。"}]},{type:a,tag:m,props:{id:R},children:[{type:a,tag:d,props:{href:"#%E3%80%8C%E3%81%AF%E3%81%98%E3%82%81%E3%81%A6%E5%85%AC%E9%96%8B%E3%81%95%E3%82%8C%E3%81%9F%E3%80%8Dcss",ariaHidden:g,tabIndex:h},children:[{type:a,tag:f,props:{className:[j,i]},children:[]}]},{type:b,value:S}]},{type:a,tag:c,props:{},children:[{type:b,value:"自分が、個人の制作物以外で「世の中の人に初めて公開された」CSSはこちらになります。"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:H,rel:[o,p,q],target:n},children:[{type:b,value:H}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"なんだかよくわからないものばかりになっております。自分で推測しますが、どこかしらのテンプレートから拝借してそのまま置いてみた感じかなと思います。まぁ当時の独学でアレコレやったド素人が書いたものなのでそんなもんです。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"美術系の大学出身"},{type:a,tag:x,props:{id:"fnref-1"},children:[{type:a,tag:d,props:{href:"#fn-1",className:[w]},children:[{type:b,value:"1"}]}]},{type:b,value:"なのですが、一応サイトを作れる人間だったので当時の卒業制作展のサイトを勝手に担当していました。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"卒業年が2008年なのですが当時はiPhoneが出回り始めて、いわゆる「スマートフォン対応」というものを徐々にしていかないといけない時代だったと思います。当時の自分はレスポンシブ対応することまではできなかったなりに、「PCはPCの体験を、SPはSPの体験をすべき」という考えをもとにSPページを用意して "},{type:a,tag:K,props:{},children:[{type:b,value:".htaccess"}]},{type:b,value:" でユーザーエージェント判定をして振り分けなんぞやってました。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"当時の有名美大の卒業サイトと見比べると月とスッポン、いや比喩することすら失礼にあたる可能性があるくらい出来は微妙なのですが、素人なりに真新しいことは無理にやらず、ちゃんと情報にたどり着ける阻害しないようなスタイル、そしてCSSは分けてスタイルも分割するなんていう生意気なことをやっていたんですねぇ（ただし内容はグダグダな感じです）"}]},{type:a,tag:m,props:{id:O},children:[{type:a,tag:d,props:{href:"#css2--css3",ariaHidden:g,tabIndex:h},children:[{type:a,tag:f,props:{className:[j,i]},children:[]}]},{type:b,value:P}]},{type:a,tag:c,props:{},children:[{type:b,value:"さて、思い出語りから話をガラリと変えてしまいますが、CSS3というものがこの世に出てからどれくらいが経ったのか皆さまはご存知でしょうか。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"調べたところどうやら「CSS2.1」が確定された2011年より策定が進んでいる"},{type:a,tag:x,props:{id:"fnref-2"},children:[{type:a,tag:d,props:{href:"#fn-2",className:[w]},children:[{type:b,value:"2"}]}]},{type:b,value:"とのことで、誕生？ から６年ほど経っているようです。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"先程紹介させていただきました卒業制作展サイトにもCSS3 Media Queriesを使用したり、box-shadow要素やgradient、border-radiusといった要素を使用しておりました。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"これまで自分の中でCSSというものはサイトにある要素を「整える」ものという認識でいて（今もそんな感じかとは思いますが）、キッチリとやるために必要なものだと思っていました。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"それがCSS3になって、より多彩な表現の幅を広げてもらえるものになったと思い、当時は画像などで対応せざるを得なかったものをCSSで対応してくれる革新性には驚かされました。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"CSSとはこんなにも自由なものなのになったのか！ それはとても素晴らしいことだと当時の私は感嘆しておりました。"}]},{type:a,tag:m,props:{id:s},children:[{type:a,tag:d,props:{href:"#%E3%83%97%E3%83%AA%E3%83%97%E3%83%AD%E3%82%BB%E3%83%83%E3%82%B5%E3%80%81%E3%83%9D%E3%82%B9%E3%83%88%E3%83%97%E3%83%AD%E3%82%BB%E3%83%83%E3%82%B5%E3%81%A8%E3%81%AE%E5%87%BA%E4%BC%9A%E3%81%84",ariaHidden:g,tabIndex:h},children:[{type:a,tag:f,props:{className:[j,i]},children:[]}]},{type:b,value:s}]},{type:a,tag:c,props:{},children:[{type:b,value:"手書きでCSSを書くことが当たり前だった私が転職先で「えっ素でCSS書いてるの…マジ…？」と言われるくらいには古いやり方だったようで、双方に驚きがあったようです。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"素のCSSを弄る時代はいつの間にか終わっており、代わりにLess、Sass、Stylusといったプリプロセッサ言語で楽にCSSを書ける、管理しやすくすることが出来ることを知ってから、世界はこんなにも広かったのか！ というような気がしました。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"中でもStylusとの出会いは特に衝撃的でした。何故かというとインデントで階層管理して、あの煩わしかった{}やコロンも省略可能で記述スピードを爆速にしてくれるのには感動しかありませんでした。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"出力された後に調整する「ポストプロセッサ」なるautoprefixer、minify、PostCSSといったものにも触れ、ブラウザごとのバージョンに合わせて、またはCSSの機能を拡張してくれるなど、これらもまた私にとっては大変重宝しているものたちでした。"}]},{type:a,tag:m,props:{id:u},children:[{type:a,tag:d,props:{href:"#%E3%80%8C%E8%A8%AD%E8%A8%88%E6%80%9D%E6%83%B3%E3%80%8D%E3%81%A8%E3%81%84%E3%81%86%E3%82%82%E3%81%AE%E3%81%8C%E3%81%82%E3%82%8B",ariaHidden:g,tabIndex:h},children:[{type:a,tag:f,props:{className:[j,i]},children:[]}]},{type:b,value:u}]},{type:a,tag:c,props:{},children:[{type:b,value:"これまでCSSについてなんとなくで書いてきた私でしたが、仕事をしたり、インターネットを潜っていると「世の中にはCSS設計思想というものがある」ことを徐々に知りました。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"有名どころですと、"},{type:a,tag:e,props:{},children:[{type:b,value:"OOCSS"}]},{type:b,value:y},{type:a,tag:e,props:{},children:[{type:b,value:"SMACSS"}]},{type:b,value:y},{type:a,tag:e,props:{},children:[{type:b,value:"FLOCSS"}]},{type:b,value:y},{type:a,tag:e,props:{},children:[{type:b,value:"BEM"}]},{type:b,value:"などでしょうか。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"設計思想とはいわば、CSSをこういう風に切り分け・管理・拡張すると運用や再利用がし易い設計となるのではないかという考え方をもとにそれぞれのアプローチが提案されています。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"自分が業務として体験してきたのは、SMACSS、BEM、そして"},{type:a,tag:e,props:{},children:[{type:b,value:"ECSS"}]},{type:b,value:"です。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"当初はBEMを使った設計を全面的に目指そうと考えていたのですが、ECSSが我々の業務内での設計とfixするのではないかと考え、今はECSSをベースとした設計思想で作成しています。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"これまでの経験則として、ファイル数は増えるがもっとも追加や更新のコストを軽減しうるものではないかなと感じています。"}]},{type:a,tag:m,props:{id:F},children:[{type:a,tag:d,props:{href:"#css%E3%81%AF%E4%B8%96%E9%96%93%E3%81%A7%E3%80%8C%E5%BF%8C%E3%81%BF%E5%AB%8C%E3%82%8F%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E3%80%8D%E8%A8%80%E8%AA%9E%E3%81%A0%E3%81%A3%E3%81%9F",ariaHidden:g,tabIndex:h},children:[{type:a,tag:f,props:{className:[j,i]},children:[]}]},{type:b,value:G}]},{type:a,tag:c,props:{},children:[{type:b,value:"そんなこんなで便利なツールや意味のある設計思想を使ってCSSを書くことが楽しくなってきた筆者にとある避けられない事実を突きつけられました。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"それはCSSは"}]},{type:a,tag:N,props:{},children:[{type:a,tag:l,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:"「明確な解決法もなく」"}]}]},{type:a,tag:l,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:"「保守しようにも破綻しかねない」"}]}]},{type:a,tag:l,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:"「一番考えるのが煩わしい」"}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"言語ということだったのです。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"おいおいそんなこと言うなよ！ こんなにも素晴らしく楽しい世界にそんなことなんて…そう思って私が振り返ってこれまでのCSSを見てあることに気づきました。"}]},{type:a,tag:c,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:"「同じように生み出されたstyle.cssなのに、よく見ると…ルールや内容が全然違っている…！」"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"クライアントワークを行う上で、要件や仕様というものが決まっていると、それに準拠するために設定などを見直す必要がでてきます。また、外部の方に制作を依頼するときも少しでも綻びがあるとそこから新たなるルールが発生してこちらがオーバーライドしかけるという事態も起こり得ていたのでした。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"加えて運用案件においてもソースコードが誰かしらの手に渡り、制作意図もうまく伝わらぬまま変わり果てたstyle.cssとなって残り続けているものもあり、それをメンテナンスしなければならなくなるということもあったそうな（この段落はフィクションです）。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"もちろん下準備した我々がそうした事態を考慮できてなかった問題もあるのですが、それにしてもここまで顔が違くなることはあるのか？ 多少の設計やプリプロセッサは違えど、何故みんな同じようにできなかったんだ？などかつての思い描いていた何でもできる素晴らしいCSSは一体何処へ…？"}]},{type:a,tag:m,props:{id:I},children:[{type:a,tag:d,props:{href:"#%E3%82%82%E3%81%97%E3%81%8B%E3%81%97%E3%81%9F%E3%82%89css%E3%82%92%E8%AA%A4%E8%A7%A3%E3%81%97%E3%81%A6%E3%81%84%E3%81%9F%E3%81%8B%E3%82%82%E3%81%97%E3%82%8C%E3%81%AA%E3%81%84",ariaHidden:g,tabIndex:h},children:[{type:a,tag:f,props:{className:[j,i]},children:[]}]},{type:b,value:J}]},{type:a,tag:c,props:{},children:[{type:b,value:"そうした失敗への気付きから今一度CSSについてを考え直していました。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"こんな書き方をしてしまえば身も蓋もないのですが、よほど長期運用するサイトであったとしても、万能薬として効く設計思想やプリプロセッサ、そしてそれをもとに得られる、再帰性があり可読性も高く更新しやすいCSSを生み出すということは、まず難しいということです。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"これはCSS自体が悪いものなのか、と考えることもできるのですが、私自身はそうではなく、"},{type:a,tag:"strong",props:{},children:[{type:b,value:"むしろそうしたCSSに合わせられないサイト設計、UI設計が良くないのでは？"}]},{type:b,value:" というある種の責任転換みたいな、しかしながらそうしない限り破綻が続くような考えを持つようになりました。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"「なんでや！ 自由度の高いサイトデザインができなくて何がWebや！」という意見もごもっともだと思います。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"ですが、結局のところウェブに残るものとは文化資産に近いそれらだと思っており、そういった文化をメンテもできない冗長性しかないもので管理するのはいかがなものか…とも考えられるのです。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"なので、極端ではありますが、現状CSSとの付き合い方はこうするしかないのかなと思っています。"}]},{type:a,tag:N,props:{},children:[{type:a,tag:l,props:{},children:[{type:b,value:"サイト設計やUI設計といったものをメンテナンスできて要素を更新するにも容易に対応できるものとした上で、正義のCSSを生み出す"}]},{type:a,tag:l,props:{},children:[{type:b,value:"新たなクラスをどんどん生み出し、他のセレクタなどに影響を出さないことを前提とした闇鍋のような悪のCSSを生み出す"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:"極端過ぎる。"}]},{type:b,value:"でも結局はどちらかになると思ってます。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"ただ、正義のCSSを生み出すために、CSSに対してみんなで優しくしろ、という訳ではないと思っています。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"何故かというと、CSSに優しい設計を考える上で、CSS以外もきちんとどう運用すべきか、どう管理すべきか、どう設計すべきかなどが徹底されて初めて成り立つものだと思っているからです。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"だから世間で忌み嫌われているCSSは、自由度が高すぎるがゆえに「なんでもしてくれる床上手な処女」のような空想上のものとどこかで錯覚しているのかもしれません。CSSもほかの言語と変わらぬきちんと運用されないと破綻されるものと一緒なのです。"}]},{type:a,tag:m,props:{id:L},children:[{type:a,tag:d,props:{href:"#css%E3%82%92%E8%A6%8B%E7%9B%B4%E3%81%99%E3%83%92%E3%83%B3%E3%83%88%E3%81%9F%E3%81%A1",ariaHidden:g,tabIndex:h},children:[{type:a,tag:f,props:{className:[j,i]},children:[]}]},{type:b,value:M}]},{type:a,tag:c,props:{},children:[{type:b,value:"そんなCSSたちをどうやって見直していけばいいか？ という部分においてヒントとなりえそうなものがあるので紹介していきます。"}]},{type:a,tag:A,props:{id:r},children:[{type:a,tag:d,props:{href:"#%E5%AE%A3%E8%A8%80%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%AF%E6%85%8E%E9%87%8D%E3%81%AB%E7%B2%BE%E6%9F%BB%E3%81%99%E3%82%8B",ariaHidden:g,tabIndex:h},children:[{type:a,tag:f,props:{className:[j,i]},children:[]}]},{type:b,value:r}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:"https:\u002F\u002Fkojika17.com\u002F2017\u002F07\u002Fcss-architecture.html",rel:[o,p,q],target:n},children:[{type:b,value:"宣言ブロックのCSS設計 | Web Design KOJIKA17"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"kojikaさんのブログでも述べられていたように、CSSにおいてプロパティや値を管理する宣言ブロックについてはあまり意識していなかったようにも思えます。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"たしかにどこかで "},{type:a,tag:K,props:{},children:[{type:b,value:"!important"}]},{type:b,value:" を入れてしまうとそれをオーバーライドするために元あった宣言ブロックのルールが破綻してしまいかねないことや、汎用的に使いこなしたいのにwidth指定やテキスト方向などが変更できないものなど、想定していたものと別の形になってしまうことがあります。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"こうした事態を避けるためにもデザインの確認やある程度余白を意識した宣言を書くようにしないといけません。割とタグに直接書く悪習はなかなか治らないので、そこで左右されないように大元をも見直すことも大事かと思われます。"}]},{type:a,tag:A,props:{id:t},children:[{type:a,tag:d,props:{href:"#stylelint%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E5%93%81%E8%B3%AA%E7%B6%AD%E6%8C%81",ariaHidden:g,tabIndex:h},children:[{type:a,tag:f,props:{className:[j,i]},children:[]}]},{type:b,value:t}]},{type:a,tag:c,props:{},children:[{type:b,value:"JavaScriptの構文チェックに使用されるeslintというLintツールがあるのですが、それのCSS版Lintツールに「Stylelint」というものがあります。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"CSSを綺麗に整形できているか？ 統一化された書き方ができているかという面で有用なのですが、他にも"},{type:a,tag:e,props:{},children:[{type:b,value:"「!importantを使っていないか？」"}]},{type:a,tag:e,props:{},children:[{type:b,value:"「階層を深くしすぎていないか？」"}]},{type:a,tag:e,props:{},children:[{type:b,value:"「プロパティが重複していないか？」"}]},{type:b,value:"などの宣言ブロック関連のチェックをしてくれるものもあります。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"標準のLintルールが割とすぐに使える（エラーも少なめ）なところもあるので、必要な部分を徐々に継ぎ足して、ルールをもった可読性のあるCSSを実現させましょう。"}]},{type:a,tag:A,props:{id:v},children:[{type:a,tag:d,props:{href:"#%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E6%8C%87%E5%90%91%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E3%83%91%E3%83%BC%E3%83%84%E3%81%94%E3%81%A8%E3%81%A7%E3%81%AE%E7%AE%A1%E7%90%86",ariaHidden:g,tabIndex:h},children:[{type:a,tag:f,props:{className:[j,i]},children:[]}]},{type:b,value:v}]},{type:a,tag:c,props:{},children:[{type:b,value:"正義のCSSを生み出す上で、私の中での１つの解として考えているのがコンポーネント管理です。 レイアウト、ページ、パーツという単位で切り分けそれらを組み合わせる…いわゆるアトミックデザインのそれに当たりますが、とにかく範囲をぶつ切りして影響範囲を減らしていく過程というのは必要なのだと思いました。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"そういう意味ではNuxt.jsというプロダクトがまさに適応しうるのでは？ と考えております。CSSに関してはstyle scopedが使用できるので、より閉鎖的に他とバッティングすることもなくセレクタの命名問題点も解消できるかもしれません。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"ただ、問題点を解消できる参入しやすいプロダクトだと思うのですが、まだまだ汎用的に使用するには有用な情報が少ないので、「まだ」確実な一手とはなってないかと思います。ですが参考にしうること（ディレクトリ構成など）は多いと思います。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"他にもReactをVueライクにするone-loaderというプロダクトもあるみたいです。"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:Q,rel:[o,p,q],target:n},children:[{type:b,value:Q}]}]},{type:a,tag:m,props:{id:D},children:[{type:a,tag:d,props:{href:"#%E6%AD%A3%E7%BE%A9%E3%81%AEcss%E3%82%92%E3%82%84%E3%81%A3%E3%81%A6%E3%81%84%E3%81%93%E3%81%86",ariaHidden:g,tabIndex:h},children:[{type:a,tag:f,props:{className:[j,i]},children:[]}]},{type:b,value:E}]},{type:a,tag:c,props:{},children:[{type:b,value:"上記３点の他にも解決しうるものは探せば出てくると思うのですが、それをこれからすぐにやり始める・導入するというのもなかなか難しいことのように思えます。何故ならこれからのCSSを失敗しないようにしても、"},{type:a,tag:e,props:{},children:[{type:b,value:"これまでのものを無かったこと・解決したことにはならないからです。贖罪とはならないのです。"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"私自身も数多くの「悪のCSS」を生み出し続けてきました。生み出してきたものを無かったことにすることはできませんが、彼らをもう一度、正しい方へと導いていくことはできるかもしれません。そのためにも何故こういう状態になっているのか・どうすればまとめられるのかを見直していくことが必要になります。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"ですが、かつては皆が信じてやまなかった「正義のCSS」として作られていたはずのものであるならば、実現しようとしていた正義の片鱗のようなものがどこかにあるはずです。そこを頼りにかつての正義（もしくは新たな希望）を取り戻しに行くことはできるかもしれません。"},{type:a,tag:x,props:{id:"fnref-3"},children:[{type:a,tag:d,props:{href:"#fn-3",className:[w]},children:[{type:b,value:"3"}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"最後にこの言葉をもって終わりとしたいと思います。ご覧いただきありがとうございました。"}]},{type:a,tag:"blockquote",props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"悪に報いるには正義をもってし、善に報いるには善をもってせよ。"}]},{type:a,tag:c,props:{},children:[{type:b,value:"孔子"}]}]},{type:a,tag:"div",props:{className:["footnotes"]},children:[{type:a,tag:"hr",props:{},children:[]},{type:a,tag:"ol",props:{},children:[{type:a,tag:l,props:{id:"fn-1"},children:[{type:b,value:"今は学部ごと移動して事実上の消滅"},{type:a,tag:d,props:{href:"#fnref-1",className:[B]},children:[{type:b,value:C}]}]},{type:a,tag:l,props:{id:"fn-2"},children:[{type:a,tag:d,props:{href:T,rel:[o,p,q],target:n},children:[{type:b,value:T}]},{type:a,tag:d,props:{href:"#fnref-2",className:[B]},children:[{type:b,value:C}]}]},{type:a,tag:l,props:{id:"fn-3"},children:[{type:b,value:"もしかしたら最初から破綻を前提とした「純粋悪なCSS」も存在すると思いますが、その場合は闇に葬り去るか完全にリセットした方がいいかもしれません"},{type:a,tag:d,props:{href:"#fnref-3",className:[B]},children:[{type:b,value:C}]}]}]}]}]},dir:"\u002Farchive",path:"\u002Farchive\u002Fcss-advent-calender-2017",extension:".md",slug:"css-advent-calender-2017",createdAt:U,updatedAt:U}}],fetch:[],mutations:[]}}("element","text","p","a","b","span","true",-1,"icon-link","icon",2,"li","h2","_blank","nofollow","noopener","noreferrer","宣言ブロックは慎重に精査する","プリプロセッサ、ポストプロセッサとの出会い","stylelintにおける品質維持","「設計思想」というものがある","コンポーネント指向におけるパーツごとでの管理","footnote-ref","sup","、",3,"h3","footnote-backref","↩","正義のcssをやっていこう","正義のCSSをやっていこう","cssは世間で「忌み嫌われている」言語だった","CSSは世間で「忌み嫌われている」言語だった","https:\u002F\u002Fgithub.com\u002Fyamanoku\u002Fgwe2012\u002Ftree\u002Fmaster\u002Fcss","もしかしたらcssを誤解していたかもしれない","もしかしたらCSSを誤解していたかもしれない","code","cssを見直すヒントたち","CSSを見直すヒントたち","ul","css2--css3","CSS2 =\u003E CSS3","https:\u002F\u002Fgithub.com\u002Fdigitalie\u002Fone-loader","「はじめて公開された」css","「はじめて公開された」CSS","https:\u002F\u002Fallabout.co.jp\u002Fgm\u002Fgc\u002F376450\u002F","2020-06-26T23:17:26.014Z")));